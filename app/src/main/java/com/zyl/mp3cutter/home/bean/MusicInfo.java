package com.zyl.mp3cutter.home.bean;import android.os.Parcel;import android.os.Parcelable;import io.objectbox.annotation.Entity;import io.objectbox.annotation.Id;//?ao.annotation.Property;@Entitypublic class MusicInfo implements Parcelable, Cloneable {	@Id()	private Long id = null;	private String filepath;	private String filename;	private long fileSize;	private int storageType; // 歌曲类型:本地/网络	private String coverPath; // [在线]专辑封面路径	private String album;	private String artist;	private String title; // 音乐标题	public MusicInfo() {	}	public String getFilepath() {		return this.filepath;	}	public void setFilepath(String filepath) {		this.filepath = filepath;	}	public String getFilename() {		return this.filename;	}	public void setFilename(String filename) {		this.filename = filename;	}	public Long getId() {		return this.id;	}	public void setId(Long id) {		this.id = id;	}	public long getFileSize() {		return this.fileSize;	}	public void setFileSize(long fileSize) {		this.fileSize = fileSize;	}	public int getStorageType() {		return storageType;	}	public MusicInfo setStorageType(int storageType) {		this.storageType = storageType;		return this;	}	public interface Type {		int LOCAL = 0;		int ONLINE = 1;	}	public String getCoverPath() {		return coverPath;	}	public MusicInfo setCoverPath(String coverPath) {		this.coverPath = coverPath;		return this;	}	public String getAlbum() {		return album;	}	public MusicInfo setAlbum(String album) {		this.album = album;		return this;	}	public String getTitle() {		return title;	}	public MusicInfo setTitle(String title) {		this.title = title;		return this;	}	public String getArtist() {		return artist;	}	public MusicInfo setArtist(String artist) {		this.artist = artist;		return this;	}	@Override	public int describeContents() {		return 0;	}	@Override	public void writeToParcel(Parcel dest, int flags) {		dest.writeValue(this.id);		dest.writeString(this.filepath);		dest.writeString(this.filename);		dest.writeLong(this.fileSize);		dest.writeInt(this.storageType);		dest.writeString(this.coverPath);		dest.writeString(this.album);		dest.writeString(this.title);		dest.writeString(this.artist);	}	protected MusicInfo(Parcel in) {		this.id = (Long) in.readValue(Long.class.getClassLoader());		this.filepath = in.readString();		this.filename = in.readString();		this.fileSize = in.readLong();		this.storageType = in.readInt();		this.coverPath = in.readString();		this.album = in.readString();		this.title = in.readString();		this.artist = in.readString();	}	public static final Parcelable.Creator<MusicInfo> CREATOR = new Parcelable.Creator<MusicInfo>() {		@Override		public MusicInfo createFromParcel(Parcel source) {			return new MusicInfo(source);		}		@Override		public MusicInfo[] newArray(int size) {			return new MusicInfo[size];		}	};	@Override	public Object clone() throws CloneNotSupportedException {		MusicInfo musicInfo = null;		try{			musicInfo = (MusicInfo) super.clone();		}catch(CloneNotSupportedException e) {			e.printStackTrace();		}		return musicInfo;	}}